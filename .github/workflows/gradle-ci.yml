
name: CI with Gradle

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  release:
    types:
    - released

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'release'
        with:
          ref: master

      - uses: actions/checkout@v4
        if: github.event_name != 'release'
        with:
          fetch-depth: 0
       
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          # cache: maven

      - name: Set Version
        id: set-version
        # Set version from build.gradle file
        run: |
          VERSION=$(sed -n 's/^version *= *"\(.*\)"/\1/p' build.gradle)
          if [ "$GITHUB_EVENT_NAME" == "release" ]; then
            VERSION=${{ github.event.release.tag_name }}
            VERSION=${VERSION/v/}
          elif [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            VERSION+=-dev.${{ github.event.pull_request.number }}
          elif [ "$GITHUB_EVENT_NAME" == "push" ]; then
            git tag -l | cat
            VERSION+=-beta
            VERSION+=.$(($(git tag -l "v$VERSION.*" | sort -nt. -k4 -k5 2>/dev/null |  tail -1 | rev | cut -d. -f1 | rev)+1))
          fi
         
          echo version=$VERSION >> $GITHUB_OUTPUT
          echo name=sonar-sslr-grappa-$VERSION >> $GITHUB_OUTPUT

      - name: Build with Gradle
        # Pass maven settings file to gradle build command
        run: |
          sed -i "s/^version *= *\"[^\"]*\"/version = \"${{ steps.set-version.outputs.version }}\"/" build.gradle
          ./gradlew build
        #run: mvn -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml -B package -Drevision=${{ steps.set-version.outputs.version }}
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}

      # - name: Publish Test Report
      #   if: ${{ always() }}
      #   uses: scacap/action-surefire-report@v1

      - name: Update Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.set-version.outputs.version }}
          prerelease: ${{ github.event_name != 'release' }}
          token: ${{ secrets.GITHUB_TOKEN }} 
          files: |
            build/libs/${{ steps.set-version.outputs.name }}.jar

      - name: Publish package
        # specify the artifact to publish
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump release version
        if: github.event_name == 'release'
        run: |
          VERSION=${{ github.event.release.tag_name }}
          VERSION=${VERSION/v/}
          NEXT_VERSION=`echo $VERSION | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.` 
          sed -i "s/^version *= *\"[^\"]*\"/version = \"$NEXT_VERSION\"/" build.gradle
          git config --global user.name 'ProjectBot'
          git config --global user.email 'bot@users.noreply.github.com'
          git add build.gradle
          git commit -m 'auto bump version with release'
          git push